// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	      DMux8Way(in=load, sel=address[6..8], a=loadaout,b=loadbout,c=loadcout,d=loaddout,e=loadeout,f=loadfout,g=loadgout,h=loadhout);
	
	RAM64(in=in,load=loadaout, out=out0, address=address[0..5]);
	RAM64(in=in,load=loadbout, out=out1, address=address[0..5]);
	RAM64(in=in,load=loadcout, out=out2, address=address[0..5]);
	RAM64(in=in,load=loaddout, out=out3, address=address[0..5]);
	RAM64(in=in,load=loadeout, out=out4, address=address[0..5]);
	RAM64(in=in,load=loadfout, out=out5, address=address[0..5]);
	RAM64(in=in,load=loadgout, out=out6, address=address[0..5]);
	RAM64(in=in,load=loadhout, out=out7, address=address[0..5]);
	
	Mux8Way16(a=out0,b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[6..8], out=out);
}